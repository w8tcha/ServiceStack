@page "/autoquerygrid"
@inject IJSRuntime JS

<h1>AutoQuery Grid</h1>

<AutoQueryGrid Model="Booking" Apis="Apis.AutoQuery<QueryBookings,CreateBooking,UpdateBooking,DeleteBooking>()" 
        AllowSelection="true" AllowFiltering="true" Items="Items">
    <Columns>
        <Column Field="(Booking x) => x.Id" class="text-gray-900" />
        <Column Field="(Booking x) => x.Name" VisibleFrom="Breakpoint.ExtraLarge" />
        <Column Field="(Booking x) => x.RoomType">
            <Header>
                <span class="hidden lg:inline">Room </span>Type
            </Header>
        </Column>
        <Column Field="(Booking x) => x.RoomNumber">
            <Header>
                <span class="hidden lg:inline">Room </span>No
            </Header>
        </Column>
        <Column Field="(Booking x) => x.Cost" Format="C" />
        <Column Field="(Booking x) => x.BookingStartDate" Formatter="FormatDate" VisibleFrom="Breakpoint.Small">
            <Header>
                Start<span class="hidden lg:inline"> Date</span>
            </Header>
        </Column>
        <Column Field="(Booking x) => x.BookingEndDate" Formatter="FormatDate" VisibleFrom="Breakpoint.ExtraLarge">
            <Header>
                End<span class="hidden lg:inline"> Date</span>
            </Header>
            <Template>
                @{
                    var booking = context as Booking;
                }
                @booking.BookingEndDate?.ToString("D")
            </Template>
        </Column>
        <Column Title="Employee" Field="(Booking x) => x.CreatedBy" VisibleFrom="Breakpoint.Medium" />
    </Columns>
</AutoQueryGrid>

@code {
    string FormatDate(object o) => o is DateTime d ? d.ToShortDateString() : "";

    public List<Booking> Items { get; set; } = new() {
        Create.Booking("First Booking!", RoomType.Queen, 10, 100, "employee@email.com"),
        Create.Booking("Booking 2", RoomType.Double, 12, 120, "manager@email.com"),
        Create.Booking("Booking the 3rd", RoomType.Suite, 13, 130, "employee@email.com"),
    };

    public async Task HandleSelectedHeader(Column<Booking> item)
    {
        await JS.Log(item.Name);
    }

    public async Task HandleSelectedRow(Booking x) 
    {
        await JS.Log(x);
    }
}
