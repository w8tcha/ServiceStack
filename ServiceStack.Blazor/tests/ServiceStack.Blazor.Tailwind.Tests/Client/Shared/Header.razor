@inject ServiceStackStateProvider AuthStateProvider;
@inject NavigationManager NavigationManager;
@inject IJSRuntime JS

<header class="border-b border-gray-200 pr-3">
    <div class="flex flex-wrap items-center">
        <div class="flex flex-grow flex-shrink flex-nowrap justify-end items-center">
            <nav class="relative flex flex-grow">
                <ul class="flex flex-wrap items-center justify-end w-full m-0">
                    @foreach (var item in NavItems)
                    {
                        <li class="relative flex flex-wrap just-fu-start m-0">
                            <NavLink href=@item.Href class="flex items-center justify-start mw-full p-4 hover:text-green-600">@item.Label</NavLink>
                        </li>
                    }

                    <AuthorizeView>
                        <Authorized>
                            <li class="relative flex flex-wrap just-fu-start m-0">
                                <button @onclick="logout" type="button" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                    Logout
                                </button>
                            </li>
                        </Authorized>
                        <Authorizing>
                            <li class="relative flex flex-wrap just-fu-start m-0">
                                <NavLink href=@LoginUrl class="router-link-active router-link-exact-active m-2" aria-current="page">
                                    <button type="button" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                        Sign In
                                    </button>
                                </NavLink>
                            </li>
                            <li class="relative flex flex-wrap just-fu-start m-0">
                                <NavLink href="/signup" class="m-2">
                                    <button class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                        Register
                                    </button>
                                </NavLink>
                            </li>
                        </Authorizing>
                        <NotAuthorized>
                            <li class="relative flex flex-wrap just-fu-start m-0">
                                <NavLink href=@LoginUrl class="router-link-active router-link-exact-active m-2" aria-current="page">
                                    <button type="button" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                        Sign In
                                    </button>
                                </NavLink>
                            </li>
                            <li class="relative flex flex-wrap just-fu-start m-0">
                                <NavLink href="/signup" class="m-2">
                                    <button class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                        Register
                                    </button>
                                </NavLink>
                            </li>
                        </NotAuthorized>
                    </AuthorizeView>

                </ul>
            </nav>
        </div>
    </div>
</header>

@code {
    string LoginUrl { get; set; } = "/signin";
    
    List<NavItem> NavItems { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        if (NavItems.Count == 0)
            NavItems = await JS.GetNavItemsAsync("HEADER_CSV");
    }

    protected override Task OnParametersSetAsync()
    {
        LoginUrl = NavigationManager.GetLoginUrl();
        return Task.CompletedTask;
    }

    async Task logout()
    {
        await AuthStateProvider.LogoutAsync();
        NavigationManager.NavigateTo(LoginUrl, true);
    }
}
