@inherits LayoutComponentBase
@inject ServiceStackStateProvider AuthStateProvider;
@inject NavigationManager NavigationManager;
@inject IJSRuntime JS

<div>
    <Header />

    <Sidebar Collapse=@CollapseSidebar Toggle=@(state => CollapseSidebar = state) />

    <div class="md:pl-64 flex flex-col flex-1">
        <div class="sticky top-0 z-10 md:hidden pl-1 pt-1 sm:pl-3 sm:pt-3 bg-white">
            <button type="button" class="-ml-0.5 -mt-0.5 h-12 w-12 inline-flex items-center justify-center rounded-md text-gray-500 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500"
                @onclick=@(() => CollapseSidebar = false)>
            <span class="sr-only">Open sidebar</span>
            <!-- Heroicon name: outline/menu -->
            <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16" />
            </svg>
            </button>
            <AuthorizeView>
                <Authorized>
                    <span class="mx-3">@context.User.GetDisplayName()</span>
                @foreach (var role in context.User.GetRoles())
                {
                    <small @key=role title="Admin" class="px-2 py-sm-1 mr-1 d-inline-flex rounded"
                           style="background-color:rgb(219 234 254);color: rgb(30 64 175);">@role</small>
                }
                    <span class="ms-2 btn btn-outline-primary" @onclick="logout">Logout</span>
                </Authorized>
                <Authorizing>
                    <NavLink class="btn btn-outline-primary" href=@LoginUrl>Login</NavLink>
                </Authorizing>
                <NotAuthorized>
                    <NavLink class="btn btn-outline-primary" href=@LoginUrl>Login</NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </div>
        <main class="flex-1">
            <div class="py-6">
                <div class="px-4 sm:px-6 md:px-8">
                    @Body
                </div>
            </div>
        </main>
    </div>

</div>

@code {
    [CascadingParameter] protected Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    bool CollapseSidebar = false;

    string LoginUrl { get; set; } = "/signin";

    protected override Task OnParametersSetAsync()
    {
        LoginUrl = NavigationManager.GetLoginUrl();
        return Task.CompletedTask;
    }

    async Task logout()
    {
        await AuthStateProvider.LogoutAsync();
        NavigationManager.NavigateTo(LoginUrl, true);
    }
}